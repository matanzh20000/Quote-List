{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\SPA with React\\\\SPA advanced\\\\src\\\\components\\\\quotes\\\\QuoteForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport { Prompt } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuoteForm = props => {\n  _s();\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({\n      author: enteredAuthor,\n      text: enteredText\n    });\n  }\n  const formFocusHandler = () => {\n    console.log(\"focus!\");\n    setIsEntering(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onFocus: formFocusHandler,\n      className: classes.form,\n      onSubmit: submitFormHandler,\n      children: [props.isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.loading,\n        children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          ref: authorInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"text\",\n          rows: \"5\",\n          ref: textInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          children: \"Add Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(QuoteForm, \"Zf9B+4RgRq31ADCOsmURGegSJ84=\");\n_c = QuoteForm;\nexport default QuoteForm;\nvar _c;\n$RefreshReg$(_c, \"QuoteForm\");","map":{"version":3,"names":["useState","useRef","Card","LoadingSpinner","classes","Prompt","QuoteForm","props","isEntering","setIsEntering","authorInputRef","textInputRef","submitFormHandler","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","formFocusHandler","console","log","form","isLoading","loading","control","actions"],"sources":["C:/react-projects/SPA with React/SPA advanced/src/components/quotes/QuoteForm.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useRef } from \"react\";\r\n\r\nimport Card from \"../UI/Card\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./QuoteForm.module.css\";\r\nimport { Prompt } from \"react-router-dom\"; \r\n\r\nconst QuoteForm = (props) => {\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const formFocusHandler = () => {\r\n    console.log(\"focus!\");\r\n    setIsEntering(true)\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <form\r\n        onFocus={formFocusHandler}\r\n        className={classes.form}\r\n        onSubmit={submitFormHandler}\r\n      >\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"author\">Author</label>\r\n          <input type=\"text\" id=\"author\" ref={authorInputRef} />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"text\">Text</label>\r\n          <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <button className=\"btn\">Add Quote</button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,OAAO;AAE9B,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,MAAM,QAAQ,kBAAkB;AAAC;AAE1C,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,cAAc,GAAGT,MAAM,EAAE;EAC/B,MAAMU,YAAY,GAAGV,MAAM,EAAE;EAE7B,SAASW,iBAAiB,CAACC,KAAK,EAAE;IAChCA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,aAAa,GAAGL,cAAc,CAACM,OAAO,CAACC,KAAK;IAClD,MAAMC,WAAW,GAAGP,YAAY,CAACK,OAAO,CAACC,KAAK;;IAE9C;;IAEAV,KAAK,CAACY,UAAU,CAAC;MAAEC,MAAM,EAAEL,aAAa;MAAEM,IAAI,EAAEH;IAAY,CAAC,CAAC;EAChE;EAEA,MAAMI,gBAAgB,GAAG,MAAM;IAC7BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBf,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,oBACE,QAAC,IAAI;IAAA,uBACH;MACE,OAAO,EAAEa,gBAAiB;MAC1B,SAAS,EAAElB,OAAO,CAACqB,IAAK;MACxB,QAAQ,EAAEb,iBAAkB;MAAA,WAE3BL,KAAK,CAACmB,SAAS,iBACd;QAAK,SAAS,EAAEtB,OAAO,CAACuB,OAAQ;QAAA,uBAC9B,QAAC,cAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAErB,eAED;QAAK,SAAS,EAAEvB,OAAO,CAACwB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAe,eACtC;UAAO,IAAI,EAAC,MAAM;UAAC,EAAE,EAAC,QAAQ;UAAC,GAAG,EAAElB;QAAe;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAClD,eACN;QAAK,SAAS,EAAEN,OAAO,CAACwB,OAAQ;QAAA,wBAC9B;UAAO,OAAO,EAAC,MAAM;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAa,eAClC;UAAU,EAAE,EAAC,MAAM;UAAC,IAAI,EAAC,GAAG;UAAC,GAAG,EAAEjB;QAAa;UAAA;UAAA;UAAA;QAAA,QAAY;MAAA;QAAA;QAAA;QAAA;MAAA,QACvD,eACN;QAAK,SAAS,EAAEP,OAAO,CAACyB,OAAQ;QAAA,uBAC9B;UAAQ,SAAS,EAAC,KAAK;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAmB;QAAA;QAAA;QAAA;MAAA,QACtC;IAAA;MAAA;MAAA;MAAA;IAAA;EACD;IAAA;IAAA;IAAA;EAAA,QACF;AAEX,CAAC;AAAC,GAjDIvB,SAAS;AAAA,KAATA,SAAS;AAmDf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}