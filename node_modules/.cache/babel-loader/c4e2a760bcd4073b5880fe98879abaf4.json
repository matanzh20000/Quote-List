{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\SPA with React\\\\SPA advanced\\\\src\\\\components\\\\comments\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {\n    sendRequest,\n    status,\n    data: loadedComments\n  } = useHttp(getAllComments);\n  const {\n    quoteId\n  } = params;\n  const onAddedCommentHandler = useCallback(() => {}, []);\n  let comments;\n  if (status === \"pending\") {\n    comments = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n  }\n  if (status === \"colmpleted\" && (loadedComments || loadedComments.length > 0)) {\n    comments = /*#__PURE__*/_jsxDEV(CommentsList, {\n      comments: loadedComments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this);\n  }\n  if (status === \"completed\" & (!loadedComments || loadedComments.length === 0)) {\n    comments = /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: \"No comments were added yet!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 18\n    }, this);\n  }\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), !isAddingComment && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: startAddCommentHandler,\n      children: \"Add a Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), isAddingComment && /*#__PURE__*/_jsxDEV(NewCommentForm, {\n      quoteId: quoteId,\n      onAddedComment: onAddedCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), comments]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"G/FZnbGtu9I+5bEEZLG1Sw/mCbg=\", false, function () {\n  return [useParams, useHttp];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["useState","useEffect","useParams","classes","NewCommentForm","useHttp","getAllComments","LoadingSpinner","CommentsList","useCallback","Comments","isAddingComment","setIsAddingComment","params","sendRequest","status","data","loadedComments","quoteId","onAddedCommentHandler","comments","length","startAddCommentHandler"],"sources":["C:/react-projects/SPA with React/SPA advanced/src/components/comments/Comments.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\nimport { useCallback } from \"react\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const { quoteId } = params;\n\n  const onAddedCommentHandler = useCallback(() => {}, [])\n    let comments;\n\n    if (status === \"pending\") {\n      comments = (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      );\n    }\n\n    if (\n      status === \"colmpleted\" &&\n      (loadedComments || loadedComments.length > 0)\n    ) {\n      comments = <CommentsList comments={loadedComments} />;\n    }\n\n    if (\n      (status === \"completed\") &\n      (!loadedComments || loadedComments.length === 0)\n    ) {\n      comments = <p className=\"centered\">No comments were added yet!</p>;\n    }\n  \n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={onAddedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,WAAW,QAAQ,OAAO;AAAC;AAEpC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMa,MAAM,GAAGX,SAAS,EAAE;EAE1B,MAAM;IAAEY,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC;EAAe,CAAC,GAAGZ,OAAO,CAACC,cAAc,CAAC;EAE7E,MAAM;IAAEY;EAAQ,CAAC,GAAGL,MAAM;EAE1B,MAAMM,qBAAqB,GAAGV,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC;EACrD,IAAIW,QAAQ;EAEZ,IAAIL,MAAM,KAAK,SAAS,EAAE;IACxBK,QAAQ,gBACN;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAErB;EACH;EAEA,IACEL,MAAM,KAAK,YAAY,KACtBE,cAAc,IAAIA,cAAc,CAACI,MAAM,GAAG,CAAC,CAAC,EAC7C;IACAD,QAAQ,gBAAG,QAAC,YAAY;MAAC,QAAQ,EAAEH;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EACvD;EAEA,IACGF,MAAM,KAAK,WAAW,IACtB,CAACE,cAAc,IAAIA,cAAc,CAACI,MAAM,KAAK,CAAC,CAAC,EAChD;IACAD,QAAQ,gBAAG;MAAG,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgC;EACpE;EAGF,MAAME,sBAAsB,GAAG,MAAM;IACnCV,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAEDX,SAAS,CAAC,MAAM;IACda,WAAW,CAACI,OAAO,CAAC;EACtB,CAAC,EAAE,CAACA,OAAO,EAAEJ,WAAW,CAAC,CAAC;EAE1B,oBACE;IAAS,SAAS,EAAEX,OAAO,CAACiB,QAAS;IAAA,wBACnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,EACrB,CAACT,eAAe,iBACf;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEW,sBAAuB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGzD,EACAX,eAAe,iBACd,QAAC,cAAc;MACb,OAAO,EAAEO,OAAQ;MACjB,cAAc,EAAEC;IAAsB;MAAA;MAAA;MAAA;IAAA,QAEzC,EACAC,QAAQ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEd,CAAC;AAAC,GA3DIV,QAAQ;EAAA,QAEGR,SAAS,EAE8BG,OAAO;AAAA;AAAA,KAJzDK,QAAQ;AA6Dd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}